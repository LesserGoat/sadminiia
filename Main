package sample;

import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.GridPane;
import javafx.stage.Stage;
import javafx.scene.layout.*;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.scene.chart.PieChart;
import javafx.scene.chart.PieChart.Data;

import java.io.FileWriter;
import java.util.ArrayList;
import java.io.File;
import java.io.Writer;
import java.util.Scanner;
import javafx.scene.control.*;


import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.stage.Stage;
import java.util.Scanner;
import java.util.ArrayList;
import java.io.Writer;
import java.io.File;
import java.io.FileWriter;
import java.io.FileReader;
import java.util.Scanner;
import javafx.scene.layout.*;
import javafx.scene.control.*;


public class Main extends Application {
    ArrayList<String> userInformation = new ArrayList<String>();


    @Override
    public void start(Stage primaryStage) throws Exception {
        GridPane root = new GridPane();
        primaryStage.setTitle("Login");
        Scene firstScene = (new Scene(root, 300, 275));
        primaryStage.setScene(firstScene);
        //add first scene
        primaryStage.show();
        //create second scene
        GridPane accountCreatorRoot = new GridPane();
        Scene accountCreator = new Scene(accountCreatorRoot, 300, 275);
        //Create A third scene
        GridPane root2 = new GridPane();
        Scene successScene = (new Scene(root2, 300, 275));

        //Put txt file values into arraylist
        try {
            FileReader reader = new FileReader("userInfo.txt");
            StringBuffer buffer = new StringBuffer();
            while (reader.ready()) {
                char c = (char) reader.read();
                if (c == '\n') {
                    userInformation.add(buffer.toString());
                    buffer = new StringBuffer();
                } else {
                    buffer.append(c);
                }
                if (buffer.length() > 0) {
                    userInformation.add(buffer.toString());
                }
            }

        } catch (Exception e) {
            System.out.println("exception, failed to check submission, likely no file for user info created yet...");
        }


        //First Scene (Home)
        //Creating labels and textfields
        Label firstLabel = new Label("Welcome! Please enter login info!");
        Label userLabel = new Label("Username");
        TextField enterUser = new TextField();
        Label passwordLabel = new Label("Password:");
        TextField enterPassword = new TextField();
        //Creating buttons and functions
        Button newAccount = new Button("Create new Account?");
        newAccount.setOnAction(event -> {
            primaryStage.setScene(accountCreator);
        });
        Button homeSubmit = new Button("Submit");
        homeSubmit.setOnAction(event -> {
            if (userInformation.contains((enterUser.getText()) + (enterPassword.getText()))) {
                UsernameStorage.setUserName(enterUser.getText());
                new HomeMenu(primaryStage);
            } else {
                System.out.println("Account not found");
            }
        });

        //Placing children on root
        root.add(firstLabel, 0, 0);
        root.add(userLabel, 0, 1);
        root.add(enterUser, 1, 1);
        root.add(passwordLabel, 0, 2);
        root.add(enterPassword, 1, 2);
        root.add(homeSubmit, 0, 3);
        root.add(newAccount, 0, 4);

        //Second Scene (Create Login)
        //Creating labels and textfields
        Label creatorHeader = new Label("Account Creation");
        Label usernameCreateLabel = new Label("Create Username:");
        TextField createUsername = new TextField();
        Label passwordCreateLabel = new Label("Create Password:");
        TextField createPassword = new TextField();
        Label passwordConfirmLabel = new Label("Confirm Password:");
        TextField confirmPassword = new TextField();
        //Creating buttons and functions
        Button creatorSubmit = new Button("Submit");
        creatorSubmit.setOnAction(event -> {
            try {
                if (userInformation.contains((enterUser.getText()))) {
                    System.out.println("User already exists");
                } else {
                    if (createPassword.getText().equals(confirmPassword.getText())) {
                        Writer userInfo = new FileWriter("userInfo.txt", true);
                        userInfo.write((createUsername.getText()) + (createPassword.getText()) + "\n");
                        userInfo.close();
                        userInformation.add((createUsername.getText()) + (createPassword.getText()));
                        primaryStage.setScene(firstScene);
                    } else {
                        System.out.println("Password and Password Confirmation do not match");
                    }
                }
            } catch (Exception e) {
                System.out.println("exception, failure to write");
            }
        });
        Button creatorBack = new Button("Back");
        creatorBack.setOnAction(event -> {
            primaryStage.setScene(firstScene);
        });

        //Placing children on accountCreatorRoot
        accountCreatorRoot.add(creatorHeader, 0, 0);
        accountCreatorRoot.add(usernameCreateLabel, 0, 1);
        accountCreatorRoot.add(createUsername, 1, 1);
        accountCreatorRoot.add(passwordCreateLabel, 0, 2);
        accountCreatorRoot.add(createPassword, 1, 2);
        accountCreatorRoot.add(passwordConfirmLabel, 0, 3);
        accountCreatorRoot.add(confirmPassword, 1, 3);
        accountCreatorRoot.add(creatorBack, 0, 4);
        accountCreatorRoot.add(creatorSubmit, 1, 4);

        //Third Scene (Login Successful)
        //Creating Label
        Label success = new Label("Login Successful");
        //Creating Button and function.
        Button successBack = new Button("Back");
        successBack.setOnAction(event -> {
            primaryStage.setScene(firstScene);
        });

        //Places Children on root2
        root2.add(success, 0, 0);
        root2.add(successBack, 0, 1);

    }




    public static void main(String[] args) {
        launch(args);
    }
}
